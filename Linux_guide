https://www.jenkins.io/doc/tutorials/tutorial-for-installing-jenkins-on-AWS/


usermod -aG wheel your_user_id
groups username

rpm -qa | grep -i vnc
vncpasswd
vncserver

kubectl version --short

kubectl get pods
kubectl apply -f nginx.yaml
kubectl get pods
kubectl delete -f nginx.yaml
kubectl get pods -o wide
kubectl describe pod nginx > /tmp/830trouble.txt
kubectl delete pod nginx

kubectl get pods --all-namespaces
kubectl delete --all deployments --namespace=devopsns


apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-830
spec:
  selector:
    matchLabels:
      run: nginx-830
  template:
    metadata:
      labels:
        run: nginx-830
    spec:
      containers:
        - name: nginx-container-830
#          image: docker.io/sc_hack:latest
#          image: docker.io/sc_hack:830

#	  image: docker.io/sc_hack:830:830
          image: docker.io/sc_hack:830:830
          image: docker.io/sc_hack:830:830

          imagePullPolicy: Always
          args: ["/bin/bash", "10.249.252.166"]
          volumeMounts:
          - mountPath: "/scdata"
            name: sc-vol
      nodeName: devopskubnode01
      volumes:
        - name: sc-vol
          persistentVolumeClaim:
            claimName: sc-volclaim-auto
      securityContext:
        runAsUser: 0
      imagePullSecrets:
        - name: kubsec
https://www.linkedin.com/pulse/ansible-roles-configure-loadbalancer-apache-web-server-agarwal


usermod -aG docker jenkins
usermod -aG root jenkins
chmod 777 /var/run/docker.sock

naveenraj ALL=(ALL) NOPASSWD: ALL
jenkins ALL=(ALL) NOPASSWD: ALL
sudo docker build -t testimage .
sudo docker login -u naveen.victory@outlook.com -p Password
sudo docker push testimage:latest naveenraj123training/project_repo:v1

__________________________________________________________________________________________________
getenforce
rpm -q grubby
sudo grubby --update-kernel ALL --args selinux=0
sudo reboot
getenforce

yum install docker -y
systemctl enable docker 
systemctl start docker 
systemctl status docker 

sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
sudo systemctl enable --now kubelet
swapoff -a

kubeadm init -h
kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=Mem
kubectl cluster-info
curl https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml -O
kubectl apply -f calico.yaml


kubeadm reset
sudo -i
swapoff -a
exit
strace -eopenat kubectl version

sudo systemctl stop kubelet
sudo systemctl start kubelet
strace -eopenat kubectl version
__________________________________________________________________________________________________

